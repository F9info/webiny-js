{"ast":null,"code":"var _jsxFileName = \"D:\\\\webiny\\\\webiny-v5\\\\apps\\\\admin\\\\code\\\\components\\\\NetworkError.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nconst GET_ERROR = gql`\n    {\n        networkError\n    }\n`;\nconst errorStyle = css({\n  margin: 50,\n  padding: \"15px 25px 5px 25px\",\n  boxSizing: \"border-box\"\n});\nconst Code = styled(\"span\")({\n  padding: \"2px 5px\",\n  margin: \"0 2px\",\n  borderRadius: \"5px\",\n  color: \"var(--webiny-theme-color-on-primary)\",\n  backgroundColor: \"var(--webiny-theme-color-primary)\"\n});\nconst Paragraph = styled(\"span\")({\n  lineHeight: 1.8\n});\n\nconst NetworkError = ({\n  children\n}) => {\n  const {\n    data\n  } = useQuery(GET_ERROR, {\n    fetchPolicy: \"cache-only\"\n  });\n\n  if (!process.env.REACT_APP_GRAPHQL_API_URL && false) {\n    return __jsx(Elevation, {\n      className: errorStyle,\n      z: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(Alert, {\n      type: \"danger\",\n      title: \"GraphQL API is unavailable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, __jsx(Paragraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"Looks like you've deployed your apps before deploying an API for them.\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }), \"Make sure you deploy a matching API environment before deploying your apps by running\", __jsx(Code, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"yarn webiny deploy api --env=your-env\"), \". This is necessary for your apps to be built correctly.\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }), \"Once your API is deployed, deploy your apps by running\", __jsx(Code, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"yarn webiny deploy apps --env=your-env\"), \".\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), __jsx(Paragraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"For step by step instructions on deploying your apps, visit our\", \" \", __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      href: \"https://docs.webiny.com/docs/get-started/going-live\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Going Live guide\"), \".\")));\n  }\n\n  if (!process.env.REACT_APP_GRAPHQL_API_URL && true) {\n    return __jsx(Elevation, {\n      className: errorStyle,\n      z: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, __jsx(Alert, {\n      type: \"danger\",\n      title: \"GraphQL API is unavailable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, __jsx(Paragraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Looks like you've started your app before deploying an API for it.\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), \"Make sure you deploy a \", __jsx(Code, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 48\n      }\n    }, \"local\"), \" environment of your API by running\", __jsx(Code, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"yarn webiny deploy api --env=local\"), \". This is necessary to run local React apps.\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }), \"Once your API is deployed, restart this app via your terminal by running\", \" \", __jsx(Code, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"yarn start\"), \" again.\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), __jsx(Paragraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"For step by step instructions on getting started with Webiny, visit our\", \" \", __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      href: \"https://docs.webiny.com/docs/get-started/quick-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Quick Start guide\"), \".\")));\n  }\n\n  return data && data.networkError ? __jsx(Elevation, {\n    className: errorStyle,\n    z: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(Alert, {\n    type: \"danger\",\n    title: \"GraphQL API is unavailable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Your API seems to be unavailable!\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), \"Make sure your API is working by visiting\", \" \", __jsx(\"a\", {\n    href: process.env.REACT_APP_GRAPHQL_API_URL,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, process.env.REACT_APP_GRAPHQL_API_URL), \".\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), \"If you've recently deployed your API, please allow \", __jsx(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 76\n    }\n  }, \"~10 minutes\"), \" \", \"for your API URL to become available.\"))) : children;\n};\n\nexport { NetworkError, GET_ERROR };","map":{"version":3,"sources":["D:/webiny/webiny-v5/apps/admin/code/components/NetworkError.tsx"],"names":["React","useQuery","gql","Alert","Elevation","css","styled","GET_ERROR","errorStyle","margin","padding","boxSizing","Code","borderRadius","color","backgroundColor","Paragraph","lineHeight","NetworkError","children","data","fetchPolicy","process","env","REACT_APP_GRAPHQL_API_URL","networkError"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nconst GET_ERROR = gql`\n    {\n        networkError\n    }\n`;\n\nconst errorStyle = css({\n    margin: 50,\n    padding: \"15px 25px 5px 25px\",\n    boxSizing: \"border-box\"\n});\n\nconst Code = styled(\"span\")({\n    padding: \"2px 5px\",\n    margin: \"0 2px\",\n    borderRadius: \"5px\",\n    color: \"var(--webiny-theme-color-on-primary)\",\n    backgroundColor: \"var(--webiny-theme-color-primary)\"\n});\n\nconst Paragraph = styled(\"span\")({\n    lineHeight: 1.8\n});\n\nconst NetworkError = ({ children }) => {\n    const { data } = useQuery(GET_ERROR, { fetchPolicy: \"cache-only\" });\n\n    if (!process.env.REACT_APP_GRAPHQL_API_URL && process.env.NODE_ENV === \"production\") {\n        return (\n            <Elevation className={errorStyle} z={2}>\n                <Alert type={\"danger\"} title={\"GraphQL API is unavailable\"}>\n                    <Paragraph>\n                        Looks like you&#39;ve deployed your apps before deploying an API for them.\n                        <br />\n                        Make sure you deploy a matching API environment before deploying your apps\n                        by running\n                        <Code>yarn webiny deploy api --env=your-env</Code>. This is necessary for\n                        your apps to be built correctly.\n                        <br />\n                        Once your API is deployed, deploy your apps by running\n                        <Code>yarn webiny deploy apps --env=your-env</Code>.\n                    </Paragraph>\n                    <br />\n                    <Paragraph>\n                        For step by step instructions on deploying your apps, visit our{\" \"}\n                        <a\n                            target={\"_blank\"}\n                            rel={\"noreferrer\"}\n                            href={\"https://docs.webiny.com/docs/get-started/going-live\"}\n                        >\n                            Going Live guide\n                        </a>\n                        .\n                    </Paragraph>\n                </Alert>\n            </Elevation>\n        );\n    }\n\n    if (!process.env.REACT_APP_GRAPHQL_API_URL && process.env.NODE_ENV === \"development\") {\n        return (\n            <Elevation className={errorStyle} z={2}>\n                <Alert type={\"danger\"} title={\"GraphQL API is unavailable\"}>\n                    <Paragraph>\n                        Looks like you&#39;ve started your app before deploying an API for it.\n                        <br />\n                        Make sure you deploy a <Code>local</Code> environment of your API by running\n                        <Code>yarn webiny deploy api --env=local</Code>. This is necessary to run\n                        local React apps.\n                        <br />\n                        Once your API is deployed, restart this app via your terminal by running{\" \"}\n                        <Code>yarn start</Code> again.\n                    </Paragraph>\n                    <br />\n                    <Paragraph>\n                        For step by step instructions on getting started with Webiny, visit our{\" \"}\n                        <a\n                            target={\"_blank\"}\n                            rel={\"noreferrer\"}\n                            href={\"https://docs.webiny.com/docs/get-started/quick-start\"}\n                        >\n                            Quick Start guide\n                        </a>\n                        .\n                    </Paragraph>\n                </Alert>\n            </Elevation>\n        );\n    }\n\n    return data && data.networkError ? (\n        <Elevation className={errorStyle} z={2}>\n            <Alert type={\"danger\"} title={\"GraphQL API is unavailable\"}>\n                <Paragraph>\n                    Your API seems to be unavailable!\n                    <br />\n                    Make sure your API is working by visiting{\" \"}\n                    <a\n                        href={process.env.REACT_APP_GRAPHQL_API_URL}\n                        target={\"_blank\"}\n                        rel={\"noreferrer\"}\n                    >\n                        {process.env.REACT_APP_GRAPHQL_API_URL}\n                    </a>\n                    .\n                    <br />\n                    If you&#39;ve recently deployed your API, please allow <Code>\n                        ~10 minutes\n                    </Code>{\" \"}\n                    for your API URL to become available.\n                </Paragraph>\n            </Alert>\n        </Elevation>\n    ) : (\n        children\n    );\n};\n\nexport { NetworkError, GET_ERROR };\n"]},"metadata":{},"sourceType":"module"}