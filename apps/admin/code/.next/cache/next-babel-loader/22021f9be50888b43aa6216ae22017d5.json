{"ast":null,"code":"var _jsxFileName = \"D:\\\\webiny\\\\webiny-v5\\\\apps\\\\admin\\\\code\\\\components\\\\admin.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { UiProvider } from \"@webiny/app/contexts/Ui\";\nimport { Routes } from \"@webiny/app/components/Routes\";\nimport { I18NProvider } from \"@webiny/app-i18n/contexts/I18N\";\nimport { SecurityProvider } from \"@webiny/app-security\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { AppInstaller } from \"@webiny/app-admin/components/AppInstaller\"; // TODO: import { CmsProvider } from \"@webiny/app-headless-cms/admin/contexts/Cms\";\n\nimport { PageBuilderProvider } from \"@webiny/app-page-builder/contexts/PageBuilder\";\nimport { BrowserRouter } from \"@webiny/react-router\";\nimport { Authentication } from \"@webiny/app-plugin-security-cognito/Authentication\";\nimport { createApolloClient } from \"./apolloClient\";\nimport { NetworkError } from \"./NetworkError\";\nimport { Telemetry } from \"./Telemetry\";\nimport { getIdentityData } from \"./getIdentityData\"; // import \"cross-fetch/polyfill\";\n// import \"core-js/stable\";\n// import \"regenerator-runtime/runtime\";\n// Import styles which include custom theme styles\n// import \"./App.scss\";\n\nconst App = () => __jsx(ApolloProvider, {\n  client: createApolloClient(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, __jsx(SecurityProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, __jsx(NetworkError, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }\n}, __jsx(BrowserRouter, {\n  basename: process.env.PUBLIC_URL,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 17\n  }\n}, __jsx(Telemetry, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }\n}), __jsx(UiProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 21\n  }\n}, __jsx(I18NProvider, {\n  loader: __jsx(CircularProgress, {\n    label: \"Loading locales...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 47\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 25\n  }\n}, __jsx(AppInstaller, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 29\n  }\n}, __jsx(Authentication, {\n  getIdentityData: getIdentityData,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 33\n  }\n}, __jsx(PageBuilderProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 37\n  }\n}, __jsx(Routes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 41\n  }\n}))))))))));\n\nexport default App;","map":{"version":3,"sources":["D:/webiny/webiny-v5/apps/admin/code/components/admin.tsx"],"names":["React","ApolloProvider","UiProvider","Routes","I18NProvider","SecurityProvider","CircularProgress","AppInstaller","PageBuilderProvider","BrowserRouter","Authentication","createApolloClient","NetworkError","Telemetry","getIdentityData","App","process","env","PUBLIC_URL"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,YAAT,QAA6B,2CAA7B,C,CACA;;AACA,SAASC,mBAAT,QAAoC,+CAApC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,cAAT,QAA+B,oDAA/B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,mBAAhC,C,CAEA;AACA;AACA;AAEA;AACA;;AAGA,MAAMC,GAAG,GAAG,MACR,MAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,kBAAkB,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAII,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAII,MAAC,aAAD;AAAe,EAAA,QAAQ,EAAEK,OAAO,CAACC,GAAR,CAAYC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAYI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMI,MAAC,YAAD;AAAc,EAAA,MAAM,EAAE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMI,MAAC,cAAD;AAAgB,EAAA,eAAe,EAAEJ,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMI,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAWI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXJ,CANJ,CANJ,CANJ,CANJ,CAZJ,CAJJ,CAJJ,CANJ,CADJ;;AA2EA,eAAeC,GAAf","sourcesContent":["import React from \"react\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { UiProvider } from \"@webiny/app/contexts/Ui\";\r\nimport { Routes } from \"@webiny/app/components/Routes\";\r\nimport { I18NProvider } from \"@webiny/app-i18n/contexts/I18N\";\r\nimport { SecurityProvider } from \"@webiny/app-security\";\r\nimport { CircularProgress } from \"@webiny/ui/Progress\";\r\nimport { AppInstaller } from \"@webiny/app-admin/components/AppInstaller\";\r\n// TODO: import { CmsProvider } from \"@webiny/app-headless-cms/admin/contexts/Cms\";\r\nimport { PageBuilderProvider } from \"@webiny/app-page-builder/contexts/PageBuilder\";\r\nimport { BrowserRouter } from \"@webiny/react-router\";\r\nimport { Authentication } from \"@webiny/app-plugin-security-cognito/Authentication\";\r\nimport { createApolloClient } from \"./apolloClient\";\r\nimport { NetworkError } from \"./NetworkError\";\r\nimport { Telemetry } from \"./Telemetry\";\r\nimport { getIdentityData } from \"./getIdentityData\";\r\n\r\n// import \"cross-fetch/polyfill\";\r\n// import \"core-js/stable\";\r\n// import \"regenerator-runtime/runtime\";\r\n\r\n// Import styles which include custom theme styles\r\n// import \"./App.scss\";\r\n\r\n\r\nconst App = () => (\r\n    <ApolloProvider client={createApolloClient()}>\r\n        {/*\r\n            <SecurityProvider> is a generic provider of identity information. 3rd party identity providers (like Cognito,\r\n            Okta, Auth0) will handle the authentication, and set the information about the user into this provider,\r\n            so other parts of the system have a centralized place to fetch user information from.\r\n        */}\r\n        <SecurityProvider>\r\n            {/*\r\n                <NetworkError> renders network error information when there are problems communicating with your GraphQL API.\r\n            */}\r\n            <NetworkError>\r\n                {/*\r\n                    <BrowserRouter> is an enhanced version of \"react-router\" to add some capabilities specific to Webiny.\r\n                */}\r\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                    {/*\r\n                        This is the Webiny telemetry system, for more information please visit: https://docs.webiny.com/docs/webiny-telemetry\r\n                    */}\r\n                    <Telemetry />\r\n                    {/*\r\n                        <UiProvider> is a centralized state handler for UI related things. When you need to render\r\n                        dialogs, snackbars, handle dark mode, you can use the \"useUi()\" hook to set/unset UI information\r\n                        without losing the state on route transitions.\r\n                        NOTE: we do not recommend using this provider for you application data, it's just a helper state\r\n                        manager to handle UI easier.\r\n                    */}\r\n                    <UiProvider>\r\n                        {/*\r\n                            <I18NProvider> loads system locales. Webiny supports multi-language content and language-based\r\n                            permissions, so we always need to know all locales to be able to render language selectors,\r\n                            and send the proper locale code to the GraphQL API.\r\n                        */}\r\n                        <I18NProvider loader={<CircularProgress label={\"Loading locales...\"} />}>\r\n                            {/*\r\n                                <AppInstaller> checks and runs app installers registered via \"admin-installation\" plugins.\r\n                                Requires \"app-installer-security\" plugin configured in \"./plugins/security.ts\"\r\n                                to render login for protected installers.\r\n                            */}\r\n                            <AppInstaller>\r\n                                {/*\r\n                                    Once all installers are executed, <Authentication> is mounted to check the identity\r\n                                    and prompt for login, if necessary. Once logged in, it sets the identity data into\r\n                                    the <SecurityProvider>.\r\n                                */}\r\n                                <Authentication getIdentityData={getIdentityData}>\r\n                                    {/*\r\n                                        <PageBuilderProvider> handles \"pb-theme\" plugins and combines them into a single\r\n                                        \"theme\" object. You can build your theme using multiple \"pb-theme\" plugins and\r\n                                        then access is using \"usePageBuilder()\" hook.\r\n                                    */}\r\n                                    <PageBuilderProvider>\r\n                                        {/*\r\n                                            <CmsProvider> handles CMS environments and provides an Apollo Client instance\r\n                                            that points to the /manage GraphQL API.\r\n                                        */}\r\n                                        {/*<CmsProvider>*/}\r\n                                        {/*\r\n                                                <Routes/> is a helper component that loads all \"route\" plugins, sorts them\r\n                                                in the correct \"path\" order and renders using the <Switch> component,\r\n                                                so only the matching route is rendered.\r\n                                            */}\r\n                                        <Routes />\r\n                                        {/*</CmsProvider>*/}\r\n                                    </PageBuilderProvider>\r\n                                </Authentication>\r\n                            </AppInstaller>\r\n                        </I18NProvider>\r\n                    </UiProvider>\r\n                </BrowserRouter>\r\n            </NetworkError>\r\n        </SecurityProvider>\r\n    </ApolloProvider>\r\n);\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}