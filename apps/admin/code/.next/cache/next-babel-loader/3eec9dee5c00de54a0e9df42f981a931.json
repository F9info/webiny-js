{"ast":null,"code":"var _jsxFileName = \"D:\\\\webiny\\\\webiny-v5\\\\apps\\\\admin\\\\code\\\\plugins\\\\theme\\\\pageBuilder\\\\components\\\\defaultPages\\\\DefaultErrorPage.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport DefaultPage from \"./DefaultPage\";\n\nconst getPbNotInstalledErrorMessage = () => {\n  // Check if window exists first (does not exist while doing SSR).\n  const isLocalhost = false && window.location.hostname === \"localhost\";\n\n  let adminUi = __jsx(\"a\", {\n    href: \"/admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 19\n    }\n  }, \"Admin UI\");\n\n  if (isLocalhost) {\n    adminUi = __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 19\n      }\n    }, \"Admin UI\");\n  }\n\n  return {\n    title: \"Installation incomplete\",\n    message: __jsx(React.Fragment, null, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"Page Builder is not installed!\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"Before you continue, please open up the \", adminUi, \" and complete the installation wizard.\"))\n  };\n};\n\nexport default function DefaultErrorPage(props) {\n  var _props$error;\n\n  let pageProps = {\n    message: __jsx(React.Fragment, null, \"The link is either broken or the page has been removed.\"),\n    title: \"An error occurred\"\n  }; // Once the Page Builder is installed, this can be safely removed.\n\n  if ((props === null || props === void 0 ? void 0 : (_props$error = props.error) === null || _props$error === void 0 ? void 0 : _props$error.code) === \"PB_NOT_INSTALLED\") {\n    pageProps = getPbNotInstalledErrorMessage();\n  }\n\n  return __jsx(DefaultPage, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }));\n}","map":{"version":3,"sources":["D:/webiny/webiny-v5/apps/admin/code/plugins/theme/pageBuilder/components/defaultPages/DefaultErrorPage.tsx"],"names":["React","DefaultPage","getPbNotInstalledErrorMessage","isLocalhost","window","location","hostname","adminUi","title","message","DefaultErrorPage","props","pageProps","error","code"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,6BAA6B,GAAG,MAAM;AACxC;AACA,QAAMC,WAAW,GAAG,SAA8BC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,WAA/E;;AACA,MAAIC,OAAO,GAAG;AAAG,IAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd;;AACA,MAAIJ,WAAJ,EAAiB;AACbI,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAV;AACH;;AAED,SAAO;AACHC,IAAAA,KAAK,EAAE,yBADJ;AAEHC,IAAAA,OAAO,EACH,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAC6CF,OAD7C,2CAFJ;AAHD,GAAP;AAYH,CApBD;;AAwBA,eAAe,SAASG,gBAAT,CAA0BC,KAA1B,EAAwD;AAAA;;AACnE,MAAIC,SAAS,GAAG;AACZH,IAAAA,OAAO,EAAE,sFADG;AAEZD,IAAAA,KAAK,EAAE;AAFK,GAAhB,CADmE,CAMnE;;AACA,MAAI,CAAAG,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEE,KAAP,8DAAcC,IAAd,MAAuB,kBAA3B,EAA+C;AAC3CF,IAAAA,SAAS,GAAGV,6BAA6B,EAAzC;AACH;;AAED,SAAO,MAAC,WAAD,eAAiBU,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH","sourcesContent":["import React from \"react\";\nimport DefaultPage from \"./DefaultPage\";\n\nconst getPbNotInstalledErrorMessage = () => {\n    // Check if window exists first (does not exist while doing SSR).\n    const isLocalhost = typeof window === \"object\" && window.location.hostname === \"localhost\";\n    let adminUi = <a href=\"/admin\">Admin UI</a>;\n    if (isLocalhost) {\n        adminUi = <strong>Admin UI</strong>;\n    }\n\n    return {\n        title: \"Installation incomplete\",\n        message: (\n            <>\n                <p>Page Builder is not installed!</p>\n                <p>\n                    Before you continue, please open up the {adminUi} and complete the installation\n                    wizard.\n                </p>\n            </>\n        )\n    };\n};\n\ntype DefaultErrorPageProps = { error?: any };\n\nexport default function DefaultErrorPage(props: DefaultErrorPageProps) {\n    let pageProps = {\n        message: <>The link is either broken or the page has been removed.</>,\n        title: \"An error occurred\"\n    };\n\n    // Once the Page Builder is installed, this can be safely removed.\n    if (props?.error?.code === \"PB_NOT_INSTALLED\") {\n        pageProps = getPbNotInstalledErrorMessage();\n    }\n\n    return <DefaultPage {...pageProps} />;\n}\n"]},"metadata":{},"sourceType":"module"}