{"ast":null,"code":"var _jsxFileName = \"D:\\\\webiny\\\\webiny-v5\\\\apps\\\\admin\\\\code\\\\plugins\\\\theme\\\\formBuilder\\\\layouts\\\\fields\\\\Checkbox.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport HelperMessage from \"../components/HelperMessage\";\n\nconst change = ({\n  option,\n  value,\n  onChange\n}) => {\n  const newValues = Array.isArray(value) ? [...value] : [];\n\n  if (newValues.includes(option.value)) {\n    newValues.splice(newValues.indexOf(option.value), 1);\n  } else {\n    newValues.push(option.value);\n  }\n\n  onChange(newValues);\n};\n\nconst checked = ({\n  option,\n  value\n}) => {\n  return Array.isArray(value) && value.includes(option.value);\n};\n\nconst Checkbox = props => {\n  const {\n    onChange,\n    value,\n    validation\n  } = props.bind;\n  const fieldId = props.field.fieldId;\n  return __jsx(\"div\", {\n    className: \"webiny-fb-form-field webiny-fb-form-field--checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    className: \"webiny-fb-form-field__label webiny-pb-typography-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(I18NValue, {\n    value: props.field.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"webiny-fb-form-field__checkbox-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, props.field.options.map(option => __jsx(\"div\", {\n    className: \"webiny-fb-form-field__checkbox\",\n    key: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    name: fieldId,\n    className: \"webiny-fb-form-field__checkbox-input\",\n    type: \"checkbox\",\n    id: \"checkbox-\" + fieldId + option.value,\n    checked: checked({\n      option,\n      value\n    }),\n    onChange: () => change({\n      option,\n      value,\n      onChange\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"checkbox-\" + fieldId + option.value,\n    className: \"webiny-fb-form-field__checkbox-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, __jsx(I18NValue, {\n    value: option.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }))))), __jsx(HelperMessage, {\n    isValid: validation.isValid,\n    errorMessage: validation.message,\n    helperMessage: __jsx(I18NValue, {\n      value: props.field.helpText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["D:/webiny/webiny-v5/apps/admin/code/plugins/theme/formBuilder/layouts/fields/Checkbox.tsx"],"names":["React","I18NValue","HelperMessage","change","option","value","onChange","newValues","Array","isArray","includes","splice","indexOf","push","checked","Checkbox","props","validation","bind","fieldId","field","label","options","map","isValid","message","helpText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FbFormModelField } from \"@webiny/app-form-builder/types\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport HelperMessage from \"../components/HelperMessage\";\nimport { BindComponentRenderProp } from \"@webiny/form\";\n\ntype Props = {\n    bind: BindComponentRenderProp;\n    field: FbFormModelField;\n};\n\nconst change = ({ option, value, onChange }) => {\n    const newValues = Array.isArray(value) ? [...value] : [];\n    if (newValues.includes(option.value)) {\n        newValues.splice(newValues.indexOf(option.value), 1);\n    } else {\n        newValues.push(option.value);\n    }\n\n    onChange(newValues);\n};\n\nconst checked = ({ option, value }) => {\n    return Array.isArray(value) && value.includes(option.value);\n};\n\nconst Checkbox = (props: Props) => {\n    const { onChange, value, validation } = props.bind;\n    const fieldId = props.field.fieldId;\n\n    return (\n        <div className=\"webiny-fb-form-field webiny-fb-form-field--checkbox\">\n            <label className=\"webiny-fb-form-field__label webiny-pb-typography-body\">\n                <I18NValue value={props.field.label} />\n            </label>\n            <div className=\"webiny-fb-form-field__checkbox-group\">\n                {props.field.options.map(option => (\n                    <div className=\"webiny-fb-form-field__checkbox\" key={option.value}>\n                        <input\n                            name={fieldId}\n                            className=\"webiny-fb-form-field__checkbox-input\"\n                            type=\"checkbox\"\n                            id={\"checkbox-\" + fieldId + option.value}\n                            checked={checked({ option, value })}\n                            onChange={() => change({ option, value, onChange })}\n                        />\n                        <label\n                            htmlFor={\"checkbox-\" + fieldId + option.value}\n                            className=\"webiny-fb-form-field__checkbox-label\"\n                        >\n                            <I18NValue value={option.label} />\n                        </label>\n                    </div>\n                ))}\n            </div>\n            <HelperMessage\n                isValid={validation.isValid}\n                errorMessage={validation.message}\n                helperMessage={<I18NValue value={props.field.helpText} />}\n            />\n        </div>\n    );\n};\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}